<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dao.OrdersDAO">
	<resultMap type="com.entity.Orders" id="ordersMap">
		<id property="ordersid" column="ordersid" />
		<result property="ordercode" column="ordercode" />
		<result property="usersid" column="usersid" />
		<result property="total" column="total" />
		<result property="status" column="status" />
		<result property="addtime" column="addtime" />
		<result property="receiver" column="receiver" />
		<result property="address" column="address" />
		<result property="contact" column="contact" />
		<result property="username" column="username" />
		<association property="users" column="usersid" select="com.dao.UsersDAO.getUsersById" javaType="com.entity.Users" />
	</resultMap>

	<insert id="insertOrders" parameterType="orders">
		insert into orders(ordersid  , ordercode  , usersid  , total  , status  , addtime  , receiver  , address  , contact ) values(#{ordersid}  , #{ordercode}   , #{usersid}   , #{total}   , #{status}   , #{addtime}   , #{receiver}   , #{address}   , #{contact} )
	</insert>

	<update id="updateOrders" parameterType="orders">
		update orders set  ordercode=#{ordercode}  , usersid=#{usersid}  , total=#{total}  , status=#{status}  , addtime=#{addtime}  , receiver=#{receiver}  , address=#{address}  , contact=#{contact}  where ordersid=#{ordersid}
	</update>

	<delete id="deleteOrders" parameterType="String">
		delete from orders where ordersid = #{ordersid}
	</delete>

	<select id="getAllOrders" resultMap="ordersMap">
		select a.* , b.username  from orders a , users b  where 1=1 and a.usersid = b.usersid  order by ordersid desc
	</select>

	<select id="getOrdersById" parameterType="String" resultMap="ordersMap">
		select a.* , b.username  from orders a , users b  where 1=1 and a.usersid = b.usersid and ordersid=#{ordersid} 
	</select>

	<select id="getOrdersByCond" parameterType="orders" resultMap="ordersMap">
		select a.* , b.username  from orders a , users b  where 1=1 and a.usersid = b.usersid 
		<if test="ordercode != null and '' != ordercode">
			and a.ordercode = #{ordercode}  
		</if>
		<if test="usersid != null and '' != usersid">
			and a.usersid = #{usersid}  
		</if>
		<if test="total != null and '' != total">
			and a.total = #{total}  
		</if>
		<if test="status != null and '' != status">
			and a.status = #{status}  
		</if>
		<if test="addtime != null and '' != addtime">
			and a.addtime = #{addtime}  
		</if>
		<if test="receiver != null and '' != receiver">
			and a.receiver = #{receiver}  
		</if>
		<if test="address != null and '' != address">
			and a.address = #{address}  
		</if>
		<if test="contact != null and '' != contact">
			and a.contact = #{contact}  
		</if>
	</select>

	<select id="getOrdersByLike" parameterType="orders" resultMap="ordersMap">
		select a.* , b.username  from orders a , users b  where 1=1 and a.usersid = b.usersid 
		<if test="ordercode != null and '' != ordercode">
			and a.ordercode like CONCAT('%', CONCAT(#{ordercode}, '%'))
		</if>
		<if test="usersid != null and '' != usersid">
			and b.username like CONCAT('%', CONCAT(#{usersid}, '%'))
		</if>
		<if test="total != null and '' != total">
			and a.total like CONCAT('%', CONCAT(#{total}, '%'))
		</if>
		<if test="status != null and '' != status">
			and a.status like CONCAT('%', CONCAT(#{status}, '%'))
		</if>
		<if test="addtime != null and '' != addtime">
			and a.addtime like CONCAT('%', CONCAT(#{addtime}, '%'))
		</if>
		<if test="receiver != null and '' != receiver">
			and a.receiver like CONCAT('%', CONCAT(#{receiver}, '%'))
		</if>
		<if test="address != null and '' != address">
			and a.address like CONCAT('%', CONCAT(#{address}, '%'))
		</if>
		<if test="contact != null and '' != contact">
			and a.contact like CONCAT('%', CONCAT(#{contact}, '%'))
		</if>
	</select>
</mapper>





























